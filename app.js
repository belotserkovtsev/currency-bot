const Telegraf = require('telegraf');
const Extra = require('telegraf/extra')
const AsyncLock = require('async-lock');
global.__basedir = __dirname;
global.__lock = new AsyncLock();
const Descriptor = require('./models/descriptor');
const Parser = require('./models/parser');

const bot = new Telegraf(process.env.TOKEN);

bot.telegram.getMe().then((botInfo) => {
    bot.options.username = botInfo.username
});

/* On /start event handler */
bot.start(ctx => {
    // ctx.scene.enter('start');
    ctx.replyWithHTML('ü§ñ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Bank Tracker!</b> –ù–∞–ø–∏—à–∏ –º–Ω–µ –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É —Ç—ã —Ö–æ—á–µ—à—å –∏ –≥–¥–µ. ' +
        '–ù–∞–ø—Ä–∏–º–µ—Ä: "<b>—Ö–æ—á—É –±–∞–∫—Å—ã –≤ —Å–ø–±</b>"');
});

bot.on('text', ctx => {
    let message = ctx.message.text;
    let city = null;
    let currency = null;
    Descriptor.decodeMessage(message)
        .then(res => {
            city = res.city.city;
            currency = res.currency.currency;
            return Parser.getBanks(res.postFields)
        })
        .then(res => {
            let replyHeader = `üëª <b>–ë–∞–Ω–∫–∏ —Å –≤—ã–≥–æ–¥–Ω—ã–º –∫—É—Ä—Å–æ–º ${currency} –¥–ª—è –≥–æ—Ä–æ–¥–∞ ${city}:</b>\n\n`;
            let replyBody = '';
            for(let i = 0; i < 5 && i < res.length; i++){
                replyBody += 'üèõ <b>' + res[i].bank + '</b>\n' + 'üíµ –ü–æ–∫—É–ø–∫–∞: ' +
                    res[i].buy + ', \nüí∂ –ü—Ä–æ–¥–∞–∂–∞: ' + res[i].sell + '\n\n'
            }
            replyBody ?
                ctx.chat.type !== 'private' ?
                    ctx.replyWithHTML(replyHeader + replyBody, Extra.inReplyTo(ctx.message.message_id)) :
                    ctx.replyWithHTML(replyHeader + replyBody) :
                ctx.chat.type !== 'private' ?
                    ctx.replyWithHTML(`‚òπÔ∏è –í –≥–æ—Ä–æ–¥–µ ${city} <b>–Ω–µ –æ–±–º–µ–Ω–∏–≤–∞—é—Ç ${currency}</b>`,
                        Extra.inReplyTo(ctx.message.message_id)) :
                    ctx.replyWithHTML(`‚òπÔ∏è –í –≥–æ—Ä–æ–¥–µ ${city} <b>–Ω–µ –æ–±–º–µ–Ω–∏–≤–∞—é—Ç ${currency}</b>`);

        })
        .catch(err => {
            if(ctx.chat.type === 'private')
                ctx.reply(err);
        })
});

bot.on('message', ctx => {
    if(ctx.chat.type === 'private'){
        ctx.replyWithHTML('üîÆ <b>–ó–∞–ø—É—Å–∫–∞—é –Ω–µ–π—Ä–æ–Ω–Ω—É—é —Å–µ—Ç—å</b>, –ø—Ä–∏—Å—Ç—É–ø–∞—é –∫ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–µ...')
            .then(res => {
                setTimeout(() => {
                    return ctx.replyWithHTML('üòÑ –®—É—á—É. <b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —Ç–µ–∫—Å—Ç</b>');
                }, 3000)
            })
            .catch(err => {
                console.log(err);
            })
    }
})

bot.launch()
    .catch(err => {
    console.log(err);
})